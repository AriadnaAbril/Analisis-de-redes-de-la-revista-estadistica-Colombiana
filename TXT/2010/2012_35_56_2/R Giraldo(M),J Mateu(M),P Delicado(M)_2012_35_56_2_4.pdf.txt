geofd: An R Package for Function-Valued Geostatistical Prediction. geofd: un paquete R para predicción geoestadística de datos funcionales
Universidad Nacional de Colombia, Bogotá, Colombia. Universitat Jaume I, Castellón, Spain. Universitat Politècnica de Catalunya, Barcelona, Spain
Abstract
Spatially correlated curves are present in a wide range of applied disciplines. In this paper we describe the R package geofd which implements ordinary kriging prediction for this type of data. Initially the curves are pre-processed by fitting a Fourier or B-splines basis functions. After that the spatial dependence among curves is estimated by means of the tracevariogram function. Finally the parameters for performing prediction by ordinary kriging at unsampled locations are by estimated solving a linear system based estimated trace-variogram. We illustrate the software analyzing real and simulated data.
Key words: Functional data, Smoothing, Spatial data, Variogram.
Resumen
Curvas espacialmente correlacionadas están presentes en un amplio rango de disciplinas aplicadas. En este trabajo se describe el paquete R geofd que implementa predicción por kriging ordinario para este tipo de datos. Inicialmente las curvas son suavizadas usando bases de funciones de Fourier o Bsplines. Posteriormente la dependencia espacial entre las curvas es estimada por la función traza-variograma. Finalmente los parámetros del predictor kriging ordinario son estimados resolviendo un sistema de ecuaciones basado en la estimación de la función traza-variograma. Se ilustra el paquete analizando datos reales y simulados.
Palabras clave: datos funcionales, datos espaciales, suavizado, variograma.

1. Introduction and Overview

    The number of problems and the range of disciplines where the data are func-
tions has recently increased. This data may be generated by a large number of mea-
surements (over time, for instance), or by automatic recordings of a quantity of in-
terest. Since the beginning of the nineties, functional data analysis (FDA) has been
used to describe, analyze and model this kind of data. Functional versions for a
wide range of statistical tools (ranging from exploratory and descriptive data anal-
ysis to linear models and multivariate techniques) have been recently developed
(see an overview in Ramsay & Silverman 2005). Standard statistical techniques for
FDA such as functional regression (Malfait & Ramsay 2003) or functional ANOVA
(Cuevas, Febrero & Fraiman 2004) assume independence among functions. How-
ever, in several disciplines of the applied sciences there exists an increasing interest
in modeling correlated functional data: This is the case when functions are ob-
served over a discrete set of time points (temporally correlated functional data)
or when these functions are observed in different sites of a region (spatially cor-
related functional data). For this reason, some statistical methods for modeling
correlated variables, such as time series (Box & Jenkins 1976) or spatial data
analysis (Cressie 1993), have been adapted to the functional context. For spatially
correlated functional data, Yamanishi & Tanaka (2003) developed a regression
model that enables to model the relationship among variables over time and space.
Baladandayuthapani, Mallick, Hong, Lupton, Turner & Caroll (2008) showed an
alternative for analyzing an experimental design with a spatially correlated func-
tional response. For this type of modeling an associate software in MATLAB
(MATLAB 2010) is available at http://odin.mdacc.tmc.edu/∼vbaladan. Staicu,
Crainiceanu & Carroll (2010) propose principal component-based methods for the
analysis of hierarchical functional data when the functions at the lowest level of
the hierarchy are correlated. A software programme accompanying this methodol-
ogy is available at http://www4.stat.ncsu.edu/∼staicu. Delicado, Giraldo, Comas
& Mateu (2010) give a review of some recent contributions in the literature on
spatial functional data. In the particular case of data with spatial continuity
(geostatistical data) several kriging and cokriging predictors (Cressie 1993) have
been proposed for performing spatial prediction of functional data. In these ap-
proaches a smoothing step, usually achieved by means of Fourier or B-splines basis
functions, is initially carried out. Then a method to establish the spatial depen-
dence between functions is proposed and finally a predictor for carrying out spatial
prediction of a curve on a unvisited location is considered. Giraldo, Delicado &
Mateu (2011) propose a classical ordinary kriging predictor, but considering curves
instead of one-dimensional data; that is, each curve is weighted by a scalar param-
eter. They called this method “ordinary kriging for function-valued spatial data”
(OKFD). This predictor was initially considered by Goulard & Voltz (1993). On
the other hand; Giraldo, Delicado & Mateu (2010) solve the problem of spatial
prediction of functional data by weighting each observed curve by a functional
parameter. Spatial prediction of functional data based on cokriging methods are
given in Giraldo (2009) and Nerini, Monestiez & Manté (2010). All of above-
mentioned approaches are important from a theoretical and applied perspective.


                                      Revista Colombiana de Estadística 35 (2012) 385–407

geofd: An R Package for Function-Valued Geostatistical Prediction                   387

A comparison of these methods based on real data suggests that all of them are
equally useful (Giraldo 2009). However, from a computational point of view the
approach based on OKFD is the simplest because the parameters to estimate are
scalars. In other cases the parameters are functions themselves and in addition it
is necessary to estimate a linear model of coregionalization (Wackernagel 1995) for
modeling the spatial dependence among curves, which could be restrictive when
the number of basis functions used for smoothing the data set is large. For this
reason the current version of the package geofd implemented within the statistical
environment R (R Development Core Team 2011) only contains functions for do-
ing spatial prediction of functional data by OKFD. However, the package will be
progressively updated including new R functions.
    It is important to clarify that the library geofd allows carrying out spatial pre-
diction of functional data (we can predict a whole curve). This software cannot be
used for doing spatio-temporal prediction. There is existing software that analyzes
and models space-time data by considering a space-time covariance model and us-
ing to make this model predictions. There is no existing software for functional
spatial prediction except the one we present in this paper. We believe there is
no reason for confusion and the context gives us the necessary information to use
existing space-time software or our software.
    The package geofd has been designed mainly to support teaching material
and to carry out data analysis and simulation studies for scientific publications.
Working in geofd with large data sets can be a problem because R has limited
memory to deal with such a large object. A solution can be use R packages for big
data support such as bigmemory (http://www.bigmemory.org) or ff (http://ff.r-
forge.r-project.org/).
    This work is organized as follows: Section 2 gives a brief overview of spatial
prediction by means of OKFD method, Section 3 describes the use of the package
geofd based on the analysis of real and simulated data and conclusions are given
in Section 4.


2. Ordinary Kriging for Functional Data
   Ferraty & Vieu (2006) define a functional variable as a random variable X
taking values in an infinite dimensional space (or functional space). Functional
data is an observation x of X. A functional data set x1 , . . . , xn is the observation
of n functional variables X1 , . . . , Xn distributed as X. Let T = [a, b] ⊆ R. We
work with functional data that are elements of
                                                     Z
               L2 (T ) = {X : T → R, such that          X(t)2 dt < ∞}
                                                     T
                                                            R
    Note that L2 (T ) with the inner product hx, yi = T x(t)y(t)dt defines an Eu-
clidean space.
    Following Delicado et al. (2010) we define a functional random process as
{Xs (t) : s ∈ D ⊆ Rd , t ∈ T ⊆ R}, usually d = 2, such that Xs (t) is a func-
tional variable for any s ∈ D. Let s1 , . . . , sn be arbitrary points in D and assume


                                     Revista Colombiana de Estadística 35 (2012) 385–407

388                                              Ramón Giraldo, Jorge Mateu & Pedro Delicado


that we can observe a realization of the functional random process Xs (t) at these n
sites, xs1 (t), . . . , xsn (t). OKFD is a geostatistical technique for predicting Xs0 (t),
the functional random process at s0 , where s0 is a unsampled location.
    It is usually assumed that the functional random process is second-order sta-
tionary and isotropic, that is, the mean and variance functions are constant and
the covariance depends only on the distance between sampling points (however,
the methodology could also be developed without assuming these conditions). For-
mally, we assume that

   1. E(Xs (t)) = m(t) and V (Xs (t)) = σ 2 (t) for all s ∈ D and all t ∈ T .

   2. COV (Xsi (t), Xsj (t)) = C(ksi − sj k)(t) = Cij (h, t), si , sj ∈ D, t ∈ T , where
      h = ksi − sj k.

   3. 21 V (Xsi (t) − Xsj (t)) = γ(ksi − sj k)(t) = γ(h, t), si , sj ∈ D, t ∈ T, where
      h = ksi − sj k.

   These assumptions imply that V (Xsi (t) − Xsj (t)) = E(Xsi (t) − Xsj (t))2 and
γksi − si k(t) = σ 2 (t) − C(ksi − sj k)(t).
      The OKFD predictor is defined as (Giraldo et al. 2011)
                                         n
                                         X
                          X
                          bs (t) =
                            0                  λi Xsi (t), λ1 , . . . , λn ∈ R                (1)
                                         i=1


    The predictor (1) has the same expression as the classical ordinary kriging
predictor (Cressie 1993), but considering curves instead of variables. The predicted
curve is a linear combination of observed curves. Our approach considers the whole
curve as a single entity, that is, we assume that each measured curve is a complete
datum. The kriging coefficients or weights λ in Equation (1) give the influence
of the curves surrounding the unsampled location where we want to perform our
prediction. Curves from those locations closer to the prediction point will naturally
have greater influence than others more far apart. These weights are estimated in
such a way that the predictor (1) is the best linear unbiased predictor (BLUP). We
assume that each observed function can be expressed in terms of K basis functions,
B1 (t), . . . , BK (t), by
                                   K
                                   X
                       xsi (t) =         ail Bl (t) = aTi B(t), i = 1, . . . , n              (2)
                                   l=1

where ai = (ai1 , . . . , aiK ), B(t) = (B1 (t), . . . , BK (t))
   In practice, these expressions are truncated versions of Fourier series (for peri-
odic functions, as it is the case for Canadian temperatures) or B-splines expansions.
Wavelets basis can also be considered (Giraldo 2009).
    To find the BLUP, we consider first Pthe unbiasedness. From the constant
                                           n
mean condition above, we require that      i=1 λi = 1. In a classical geostatis-
tical setting we assume that the observations are realizations of a random field


                                               Revista Colombiana de Estadística 35 (2012) 385–407

geofd: An R Package for Function-Valued Geostatistical Prediction                                       389

                                                          bs = Pn λi Xs , and

 Xs : s ∈ D, D ∈ Rd . The kriging predictor is defined as X 0   i=1    i
the BLUP is obtained by minimizing
                                                σs20 = V (X
                                                          bs − Xs )
                                                            0    0
          Pn
subject to i=1 λi = 1. On the other hand in multivariable geostatistics    (Myers
1982, Ver Hoef & Cressie 1993, Wackernagel 1995) the data consist of Xs1 , . . . ,
Xsn , that is, we have observations of a spatial vector-valued process {Xs : s ∈ D},
where Xs = (Xs (1), . . . , Xs (m)) and D ∈ Rd . In this context V (X
                                                                    cs − X s ) is a
                                                                       0       0
matrix, and the BLUP of m variables at an unsampled location s0 can be obtained
by minimizing
                                    m
                                    X                    
                             σs20 =   V X bs (i) − Xs (i)
                                            0         0
                                                 i=1
subject to constraints that guarantee unbiasedness conditions, that is, minimizing
the trace of the mean-squared prediction error matrix subject to some restrictions
given by the unbiasedness condition (Myers 1982). Extending the criterion given in
Myers (1982) to the functional context by replacing the summation by an integral,
the n parameters in Equation (1) are obtained by solving the following constrained
optimization problem (Giraldo et al. 2011)
                         Z                               n
                                                         X
                   min          bs (t) − Xs (t))dt, s.t.
                             V (X                          λi = 1               (3)
                                  0        0
                      λ1 ,...,λn      T                                     i=1

which after some algebraic manipulation can be written as
 Xn X n        Z                Z             n Z
                                              X                      n
                                                                     X
                                   2
         λi λj   Cij (h, t)dt +   σ (t)dt − 2     Ci0 (h, t)dt + 2µ(   λi − 1) (4)
 i=1 j=1          T                             T                i=1   T                  i=1

where µ is the Lagrange multiplier used to take into account the unbiasedness
restriction. Minimizing (4) with respect to λ1 , . . . , λn and µ, we find the following
linear system which enables to estimate the parameters
   R                                     R                                  
        T γks1 − s1 k(t)dt     ···            T γks1 − sn k(t)dt     1      λ1
             ..               ..                     ..                 . 
                                                                     ..      
                                  .                                   .  .. 
  
              .                                       .
   R                                     R                                  
  
      T γks n −  s1 k(t)dt     ···            T γks n −  sn k(t)dt   1   λn 
              1                ···                    1              0      −µ
                                                                               R                   
                                                                                 T γks0 − s1 k(t)dt
                                                                             
                                                                                       ..          
                                                                                                    
                                                                            =           .             (5)
                                                                              R                    
                                                                                 T γks0 − sn k(t)dt
                                                                                                   
                                                                                        1
                           R
    The function γ(h) = T γksi − sj k(t)dt, is called the trace-variogram. In order
to solve the system in (5), an estimator of the trace-variogram is needed. Given
that we are assuming that Xs (t) has a constant mean function m(t) over D,
V (Xsi (t) − Xsj (t)) = E[(Xsi (t) − Xsj (t))2 ]. Note that, using Fubini’s theorem
                Z                          
            1
    γ(h) = E         (Xsi (t) − Xsj (t))2 dt , for si , sj ∈ D with h = ksi − sj k (6)
            2      T


                                                       Revista Colombiana de Estadística 35 (2012) 385–407

390                                    Ramón Giraldo, Jorge Mateu & Pedro Delicado


   Then an adaptation of the classical method-of-moments (MoM) for this ex-
pected value, gives the following estimator
                             1      X Z
                  γ
                  b(h) =                     (Xsi (t) − Xsj (t))2 dt    (7)
                          2|N (h)|         T
                                   i,j∈N (h)

where N (h) = {(si , sj ) : ksi − sj k = h}, and |N (h)| is the number of distinct
elements in N (h). For irregularly spaced data there are generally not enough
observations separated by exactly a distance h. Then N (h) is modified to {(si , sj ) :
ksi − sj k ∈ (h − ε, h + ε)}, with ε > 0 being a small value.
   Once we have estimated the trace-variogram for a sequence of K values hk ,
a parametric model γ(h; θ) such as spherical, Gaussian, exponential or Matérn
(Ribeiro & Diggle 2001) must be fitted.
   The prediction trace-variance of the functional ordinary kriging based on the
trace-variogram is given by
                 Z                          n
                                            X      Z
          σs20 =   V (Xbs (t) − Xs (t))dt =
                         0        0
                                               λ i   γksi − s0 k(t)dt − µ    (8)
                  T                            i=1    T


    This parameter should be considered as a global uncertainty measure, in the
sense that it is an integrated version of the classical pointwise prediction variance
of ordinary kriging. For this reason its estimation cannot be used to obtain a
confidence interval for the predicted curve. There is not, to the best of our knowl-
edge, a method which allows us to do spatial prediction of functional data with
an estimation of a prediction variance curve. We must take into account that we
predict a whole curve and is not possible with this methodology to get point-wise
confidence intervals, as we can obtain by using space or space-time models. It is
clear that spatial-functional data and spatial temporal models have a common link
in the sense that we have evolution of a spatial process through time or through
any other characteristic. But at the same time there is an important difference.
Spatial temporal models consider the evolution of a spatial process through time
and models the interdependency of space and time. In this case we have X(s, t)
a single variable and we want to predict a variable at an unsampled location. In
the spatial-functional case Xs (t) is itself a function and thus we aim at predicting
a function.


3. Illustration
    Table 1 summarizes the functions of the package geofd. To illustrate its use
we analyze real and simulated data. Initially in Sections 3.1 and 3.2 we apply
the methodology to temperature measurements recorded at 35 weather stations
located in the Canadian Maritime Provinces (Figure 1, left panel). Then the
results with a simulated data set are shown in Section 3.3
    The Maritime Provinces cover a region of Canada consisting of three provinces:
Nova Scotia (NS), New Brunswick (NB), and Prince Edward Island (PEI). In par-
ticular, we analyze information of daily mean temperatures averaged over the


                                     Revista Colombiana de Estadística 35 (2012) 385–407

geofd: An R Package for Function-Valued Geostatistical Prediction                                                                                  391




                                          Bertrand
                               Bathurst


                                 Miramichi
      Aroostook                                       Alberton
                                           Rexton                                              Ingonish
                        Doaktown                                                   Cheticamp              Beach
                                          Bouctouche Summerside
      Woodstock                                                   Charlottetown
                                           Moncton                                         Baddeck Sydney
                       Accadia
         Fredericton OromoctoGagetown                      Pugwash
                                  Sussex            Nappan
                                           Alma              Parrsboro
                                                 Parrsboro        Truro
                         Saint John
                                                Kentville    Middle musquodoboit
                                        Grenwood              Halifax
                                 Annapolis
                                                             Shearwater
                                    Keminkujik Bridgewater
                                          Liverpoll




Figure 1: Averages (over 30 years) of daily temperature curves (right panel) observed
          at 35 weather stations of the Canadian Maritime provinces (left panel).


                                                     Table 1: Summary of the geofd functions.
  Function                                           Description
  fit.tracevariog                                    Fits a parametric model to the trace-variogram
  .geofd.viewer                                      Graphical interface to plot multiple predictions
  l2.norm                                            Calculates the L2 norm between all pairs of curves
  maritimes.data                                     Temperature values at 35 weather stations of Canada
  maritimes.avg                                      Average temperature at Moncton station
  okfd                                               Ordinary kriging for function-value data
  okfd.cv                                            Cross-validation analysis for ordinary kriging for function-value data
  plot.geofd                                         Plot the trace-variogram function and some adjusted models
  trace.variog                                       Calculates the trace-variogram function



years 1960 to 1994 (February 29th combined with February 28th) (Figure 1, right
panel). The data for each station were obtained from the Meteorological Service of
Canada (http://www.climate.weatheroffice.ec.gc.ca/climateData/). Our package
makes use of the R libraries fda (Ramsay, Hooker & Graves 2009) for smooth-
ing data (by Fourier or B-splines basis) and geoR (Ribeiro & Diggle 2001) for
fitting a variogram model to the estimated trace-variogram function. The tem-
perature data set considered (Figure 1, right panel) is periodic and consequently
a Fourier basis function is the most appropriate choice for smoothing it (Ramsay
& Silverman 2005). However for illustrative purposes we also use a B-spline ba-
sis function. We can make a prediction at only one site or at multiple locations.
Both alternatives are considered in the examples (Figure 2). In Section 3.1 we
smooth the temperature data using a B-splines basis and, make a prediction at an
unvisited location (left panel, Figure 2). In Section 3.2 we smooth the data using
a Fourier basis and predict the temperature curves at ten randomly chosen sites
(right panel, Figure 2).




                                                                                                    Revista Colombiana de Estadística 35 (2012) 385–407

392                                                  Ramón Giraldo, Jorge Mateu & Pedro Delicado

                       A fixed site                                    Ten randomly selected sites

                                      Data locations                                           Data locations
                                      Non-data location                                        Non-data locations




Figure 2: Prediction sites. A fixed site considered in the first example (left panel) and
          ten randomly selected sites considered in the second one (right panel).



3.1. Using a B-splines Basis
   The following code illustrates how to use the library geofd for predicting a
temperature curve at an unsampled location when the data are smoothed by using
a B-splines basis. Initially we read and plot the data set (Figure 1, right panel),
plot the coordinates of visited sites and choose a site for carrying out a prediction
(Figure 2, left panel). The R code is the following.

R> library (geofd)
R> data(maritimes)

    The library(geofd) command loads the package geofd (and other dependent
packages) into the R computing environment. The data(maritimes) command
loads the maritimes data set containing 35 temperature curves obtained at the
same number of weather stations of the maritime provinces of Canada. The first
five temperature values for four weather stations are

R> head(maritimes.data[,1:4], n=5)

        Fredericton               Halifax Sydney    Miramichi
[1,]                  -7.9           -4.4      -3.8     -8.60
[2,]                  -7.5           -4.2      -3.5     -8.32
[3,]                  -9.3           -5.3      -4.6     -9.87
[4,]                  -8.7           -5.4      -5.0     -9.55
[5,]                  -9.1           -5.6      -4.1     -9.58

      The next five lines of commands allow to plot the data and the coordinates.

R> matplot(maritimes.data,type="l",xlab="Day",ylab="degress C")
R> abline(h=0, lty=2)


                                                 Revista Colombiana de Estadística 35 (2012) 385–407

geofd: An R Package for Function-Valued Geostatistical Prediction                   393

R> plot(maritimes.coords)
R> coord.cero <- matrix(c(-64.06, 45.79),nrow=1,ncol=2)
R> points(coord.cero, col=2, lwd=3)

    The main function of geofd is okfd (Table 1). This function allows to carry out
predictions by ordinary kriging for function-valued data by considering a Fourier
or a B-splines basis as methods for smoothing the observed data set. This covers
from the smoothing step and trace-variogram estimation to data prediction. Al-
though the estimation of the trace-variogram can be obtained by directly using
the function okfd, it is also possible to estimate it in a sequential way by using
the functions l2.norm, trace.vari and fit.tracevariog, respectively (Table 1).
Now we give an illustration in this sense. In this example the data set is smoothed
by using a B-splines basis with 65 functions without penalization (Figure 3, left
panel). The number of basis functions was chosen by cross-validation (Delicado
et al. 2010). We initially define the parameters for smoothing the data. We use
here the fda library. An overview of the smoothing functional data by means of
B-splines basis using the library fda library can be found in (Ramsay, Wickham,
Graves & Hooker 2010). The following code illustrates how to run this process
with the maritime data set.

R> n<-dim(maritimes.data)[1]
R> argvals<-seq(1,n, by=1)
R> s<-35
R> rangeval <- range(argvals)
R> norder   <- 4
R> nbasis   <- 65
R> bspl.basis <- create.bspline.basis(rangeval, nbasis, norder)
R> lambda <-0
R> datafdPar <- fdPar(bspl.basis, Lfdobj=2, lambda)
R> smfd <- smooth.basis(argvals,maritimes.data,datafdPar)
R> datafd <- smfd$fd
R> plot(datafd, lty=1, xlab="Day", ylab="Temperature (degrees C)")

    The smoothed curves are shown in the left panel of Figure 3. Once wi have
smoothed the data, we can use the functions above for estimating the trace-
variogram. First we have to calculate the L2 norm between the smoothed curves
using the function l2.norm. The arguments for this function are the number s of
sites where curves are observed, datafd a functional data object representing a
smoothed data set and M a symmetric matrix of order equal to the number of basis
functions defined by the B-splines basis object, where each element is the inner
product of two basis functions after applying the derivative or linear differential
operator defined by Lfdobj (Ramsay et al. 2010).

R> M <- bsplinepen(bspl.basis,Lfdobj=0)
R> L2norm <- l2.norm(s, datafd, M)

In the above commands the results are assigned to the variable L2norm. This
one stores a matrix whose values correspond to the L2 norm between each pair


                                     Revista Colombiana de Estadística 35 (2012) 385–407

394                                   Ramón Giraldo, Jorge Mateu & Pedro Delicado




Figure 3: Smoothed data of daily temperature by using a B-splines basis (left panel)
          and a Fourier basis (right panel) with 65 functions.



of functional data into the data set. This matrix is then passed to the function
trace.variog for estimating the trace-variogram function. The output can be re-
turned as a trace-variogram “cloud" or as a binned trace-variogram (see Equation
7). The following code shows how this function can be used in combination with
fit.tracevariog for fitting a model to the trace-variogram function obtained
with the maritime data set. The main arguments of the function trace.variog
are coords the geographical coordinates in decimal degrees where data where
recorded, L2 norm a matrix whose values are the L2 norm between all pair of
smoothed functions (an output from the function l2.norm), bin which is a logical
argument indicating whether the output is a binned variogram, maxdist a nu-
merical value defining the maximum distance for calculating the trace-variogram.
Other arguments such as uvec, breaks and nugget.tolerance are defined as in
the function variog of the package geoR. In order to fit a theoretical model (ex-
ponential, Gaussian, spherical or Matern) to the estimated trace-variogram we
can use the function fit.tracevariog. This function makes use of the function
variofit of geoR. The arguments of these functions are the estimations of the
trace-variogram function (an output of the function trace.variog), model a list
with the models that we want to fit, and some initial values for the parameters in
these models. The command lines below show the use of these functions.

R> dista=max(dist(maritimes.coords))*0.9
R> tracev=trace.variog(maritimes.coords, L2norm, bin=FALSE,
+ max.dist=dista,uvec="default",breaks="default",nugget.tolerance)
R> models=fit.tracevariog(tracev, models=c("spherical","exponential",
+ "gaussian","matern"),sigma2.0=2000, phi.0=4, fix.nugget=FALSE,
+ nugget=0, fix.kappa=TRUE, kappa=1, max.dist.variogram=dista)

The variable tracev above stores the output of the function trace.variog which
is used posteriorly in the function plot.geofd for plotting the trace-variogram


                                    Revista Colombiana de Estadística 35 (2012) 385–407

geofd: An R Package for Function-Valued Geostatistical Prediction                                         395

                                  Trace-variogram cloud
                                                                                    Trace-variogram bin
                   empirical trace variogram
                   spherical
                   exponential
                   gaussian
                   matern
 Trace-variogram




                                                                 Trace-variogram
                                          Distance
                                                                                         Distance

Figure 4: Estimated trace-variogram “cloud” and four fitted models (left panel). Esti-
          mated trace-variogram “bin” and the best fitted model (right panel).



“cloud”. On the other hand the variable model stores the results obtained with the
function fit.tracevariog. The use of the function plot.geofd in combination
with the command lines (models$fitted) produces the plot shown in Figure
4 (left panel), this is, the estimated trace-variogram “cloud” and the four fitted
models (exponential, Gaussian, spherical and Matern).

R> plot(tracev, xlab="Distancia", ylab="Trace-Variogram")
R> lines(models$fitted[[1]], lwd=2)
R> lines(models$fitted[[2]], lwd=2, col=4)
R> lines(models$fitted[[3]], lwd=2, col=7)
R> lines(models$fitted[[4]], lwd=2, col=6)
R> legend("topleft",   c("empirical trace variogram", "spherical",
+ "exponential", "gaussian",    "matern"), lty=c(-1,1,1,1,1),
+ col=c(1,1,4,7,6), pch=c(1,-1,-1,-1,-1))

In Figure 4 (right panel) the estimated trace-variogram “bin” and the best fitted
model are shown. This plot is obtained by using the code below. In this case we
use the option bin=TRUE in the function trace.variog, and the command line
lines(models$fitted[[2]], lwd=2, col=4) to plot the exponential model.

R> tracevbin=trace.variog(maritimes.coords, L2norm, bin=TRUE,
+ max.dist=dista)
R> plot(tracevbin$u, tracevbin$v, ylim=c(0,3000), xlim=c(0, 7),
+ xlab="Distance", ylab="Trace-Variogram")
R> lines(models$fitted[[2]], lwd=2, col=4)

    The numerical results of the function fit.tracevariog are stored in the ob-
ject models. This list contains the estimations of the parameters (τ 2 , σ 2 , and
φ) for each trace-variogram model and the minimized sum of squared errors (see


                                                          Revista Colombiana de Estadística 35 (2012) 385–407

396                                 Ramón Giraldo, Jorge Mateu & Pedro Delicado


variofit from geoR). According to the results below we can observe that the best
model (least sum of squared errors) is the exponential model.

R>models

[[1]]
variofit: model parameters estimated by OLS (ordinary least squares):
covariance model is: spherical
fixed value for tausq = 0
parameter estimates:
  sigmasq       phi
3999.9950   12.0886
Practical Range with cor=0.05 for asymptotic range: 12.08865
variofit: minimised sum of squares = 529334304
[[2]]
variofit: model parameters estimated by OLS (ordinary least squares):
covariance model is: exponential
fixed value for tausq = 0
parameter estimates:
  sigmasq       phi
4000.0003    6.2689
Practical Range with cor=0.05 for asymptotic range: 18.77982
variofit: minimised sum of squares = 524840646
[[3]]
variofit: model parameters estimated by OLS (ordinary least squares):
covariance model is: gaussian
fixed value for tausq = 0
parameter estimates:
  sigmasq       phi
2092.8256    2.2886
Practical Range with cor=0.05 for asymptotic range: 3.961147
variofit: minimised sum of squares = 541151209
fitted[[4]]
variofit: model parameters estimated by OLS (ordinary least squares):
covariance model is: Matern with fixed kappa = 1
fixed value for tausq = 0
parameter estimates:
  sigmasq       phi
2693.1643    1.9739
Practical Range with cor=0.05 for asymptotic range: 7.892865
variofit: minimised sum of squares = 529431348

    Once fitted, the best trace-variogram model we can use the okfd function for
performing spatial prediction at an unvisited location. The arguments of this
function are new.coords an n × 2 matrix containing the coordinates of the new
n prediction sites, coords an s × 2 matrix containing the coordinates of the s
sites where functional data were recorded, data an m × s matrix with values


                                  Revista Colombiana de Estadística 35 (2012) 385–407

geofd: An R Package for Function-Valued Geostatistical Prediction                   397

for the observed functions, smooth.type a string with the name of smoothing
method to be used (B-splines or Fourier), nbasis a numeric value defining the
number of basis functions used to smooth the discrete data set recorded at each
site, argvals a vector containing argument values associated with the values to
be smoothed, lambda (optional) a penalization parameter for smoothing the ob-
served functions, and cov.model a string with the name of the correlation function
(see variofit from geoR). Other additional arguments are fix.nugget, nugget
value, fix.kappa, kappa (related to the parameters of the correlation model),
and max.dist.variogram a numerical value defining the maximum distance con-
sidered when fitting the variogram model. The code below allows to predict a
temperature curve at the Moncton weather station (see Figure 1).

R> okfd.res<-okfd(new.coords=coord.cero, coords=maritimes.coords,
+ cov.model="exponential", data=maritimes.data, nbasis=65,
+ argvals=argvals, fix.nugget=TRUE)
R> plot(okfd.res$datafd, lty=1,col=8, xlab="Day",
+ ylab="Temperature (degrees C)",
+ main="Prediction at Moncton")
R> lines(okfd.res$argvals, okfd.res$krig.new.data, col=1, lwd=2,
+ type="l", lty=1, main="Predictions", xlab="Day",
+ ylab="Temperature (Degrees C)")
R> lines(maritimes.avg, type="p", pch=20,cex=0.5, col=2, lwd=1)

   A graphical comparison between real data (see maritimes.avg in Table 1) and
the predicted curve (Figure 5) allows to conclude that the method OKFD has a
good performance with this data set.




Figure 5: Smoothed curves by using a B-splines basis with 65 functions (gray), real
          data at Moncton weather station (red dots) and prediction at Moncton by
          ordinary kriging for function-value spatial data.




                                     Revista Colombiana de Estadística 35 (2012) 385–407

398                                   Ramón Giraldo, Jorge Mateu & Pedro Delicado


3.2. Using a Fourier basis
    Now we use the package geofd for carrying out spatial prediction of temperature
curves at ten randomly selected locations in the Canadian Maritimes Provinces
(Figure 2, right panel). We use a Fourier basis with 65 functions for smoothing the
data set (the same number of basis functions K as in Section 3.1) . In this example
we show how the function okfd allows both smoothing the data and estimating
directly a trace-variogram model. Posteriorly the estimation is used for performing
spatial predictions of temperature curves on the ten locations already mentioned.
The R code is the following

R> argvals<-seq(1,n, by=1)
R> col1<-sample((min(maritimes.coords[,1])*100):
(max(maritimes.coords[,1]) + *100),10, replace=TRUE)/100
R> col2<-sample((min(maritimes.coords[,2])*100):
(max(maritimes.coords[,2]) + *100),10, replace=TRUE)/100
R> new.coords <- cbind(col1,col2)

The variable argvals contains argument values associated with the values to be
smoothed by using a Fourier basis. The variables col1, col2, and new.coords
are used for defining the prediction locations (Figure 2, right panel). The variable
argvals and new.coords are used as arguments of the function okfd in the code
below

R> okfd.res<-okfd(new.coords=new.coords, coords=maritimes.coords,
+ data=maritimes.data, smooth.type="fourier", nbasis=65,
+ argvals=argvals, kappa=0.7)

    In this example the arguments smooth.type="fourier" and nbasis=65 in the
function okfd allows us to smooth the data by using a Fourier basis with 65 func-
tions (the number of basis functions was determined by cross-validation). In the
example in Section 3.1 we use directly cov.model="exponential" in the function
okfd because we chose this model previously by using the functions trace.variog
and fit.tracevariog. If we do not specify a covariance model the function okfd
estimates several models and selects the model with the least sum of squared errors.
The parameter kappa=.7 indicates that in addition to the spherical, exponential
and Gaussian model, a Matern model with κ = .7 is also fitted.
   A list with the objects stored in the variable okfd.res is obtained with the
command line

R> names(okfd.res)

 [1] "coords"                             "data"
 [3] "argvals"                            "nbasis"
 [5] "lambda"                             "new.coords"
 [7] "emp.trace.vari"                     "trace.vari"
 [9] "new.Eu.d"                           "functional.kriging.weights"


                                    Revista Colombiana de Estadística 35 (2012) 385–407

geofd: An R Package for Function-Valued Geostatistical Prediction                                     399

                                                                               Trace-variogram bin
                               Trace-variogram cloud
                  empirical trace variogram
                  spherical
                  exponential
                  gaussian
                  matern
Trace-variogram




                                                             Trace-variogram
                                       Distance                                    Distance

Figure 6: Estimated trace-variogram “cloud” and four fitted models (left panel). Esti-
          mated trace-variogram “bin” and the best fitted model (right panel).



[11] "krig.new.data"                                         "pred.var"
[13] "trace.vari.array"                                      "datafd"

  We can use these objects for plotting the trace-variogram function, the esti-
mated models and the predictions. A plot with the four fitted models and the best
model is shown in Figure 6. We obtain this figure by using the command lines

R> plot(okfd.res, ylim=c(0,6000))
R> trace.variog.bin<-trace.variog(okfd.res$coords,
+ okfd.res$emp.trace.vari$L2norm, bin=TRUE)
R> plot(trace.variog.bin, ylim=c(0,6000), xlab="Distance",
+ ylab="Trace-variogram", main="Trace-variogram Bin")
R> lines(okfd.res$trace.vari, col=4, lwd=2)

Numerical results of the trace-variogram fitted models are obtained by using the
command line

okfd.res$trace.vari.array

[[1]]
variofit: model parameters estimated by OLS (ordinary least squares):
covariance model is: spherical
parameter estimates:
      tausq     sigmasq         phi
   178.4011 644834.9056   2328.6674
Practical Range with cor=0.05 for asymptotic range: 2328.667
variofit: minimised sum of squares = 539799716
[[2]]
variofit: model parameters estimated by OLS (ordinary least squares):


                                                       Revista Colombiana de Estadística 35 (2012) 385–407

400                                   Ramón Giraldo, Jorge Mateu & Pedro Delicado


covariance model is: exponential
parameter estimates:
     tausq    sigmasq         phi
  109.9118 11006.6152    23.1467
Practical Range with cor=0.05 for asymptotic range: 69.34139
variofit: minimised sum of squares = 539566326
[[3]]
variofit: model parameters estimated by OLS (ordinary least squares):
covariance model is: gaussian
parameter estimates:
    tausq   sigmasq       phi
 369.1311 2103.8708    3.3617
Practical Range with cor=0.05 for asymptotic range: 5.818404
variofit: minimised sum of squares = 552739397
[[4]]
variofit: model parameters estimated by OLS (ordinary least squares):
covariance model is: matern with fixed kappa = 0.7
parameter estimates:
    tausq   sigmasq       phi
 200.4886 4486.5365    5.8946
Practical Range with cor=0.05 for asymptotic range: 20.31806
variofit: minimised sum of squares = 541310787

    The model with least sum of squared errors is again a exponential model (Figure
6, right panel). Consequently the function okfd above uses this model for solving
the system in Equation 5 and for carrying out the predictions. Numerical values
of predictions and prediction variances can be checked by using the commands

R> okfd.res[11]
R> okfd.res[12]

The predictions can be plotted by using the following command line

R>.geofd.viewer(okfd.res, argnames=c("Prediction","Day",
"Temperature"))

The function .geofd.viewer implements a Tcl/Tk interface (Grosjean 2010) for
showing OKFD prediction results. This viewer presents two frames, the left one
presents the spatial distribution of the prediction sites. The right one presents
the selected prediction curve based on the point clicked by the user on the left
frame. In Figure 7 we show the result of using this function. In the left panel a
scatterplot with the coordinates of the prediction locations are shown. The dark
point in the left panel is the clicked point and, the curve in the right panel shows
the prediction at this site.
   On the other hand if we want to plot all the predicted curves and analyze them
simultaneously we can use the following command line


                                    Revista Colombiana de Estadística 35 (2012) 385–407

geofd: An R Package for Function-Valued Geostatistical Prediction                          401




Figure 7: An example of the function .geofd.viewer. Left panel: Scatterplot with
          the coordinates of prediction locations. Right panel: Prediction on a clicked
          point (red point in left panel).



R> matplot(okfd.res$argvals, okfd.res$krig.new.data, col=1, lwd=1,
 type="l", + lty=1, main="Predictions", xlab="Day",
 ylab="Temperature (degrees C)")


   We can observe that the predicted curves (Figure 8) are consistent with the
behavior of the original data set (Figure 1). This result indicates empirically that
the OKFD method shows a good performance.


                                                Predictions
                  Temperature (degrees C)




                                                   Day

Figure 8: OKFD Predictions at ten randomly selected sites from Canadian Maritimes
          Provinces. Observed data were previously smoothed by using a Fourier basis.




                                            Revista Colombiana de Estadística 35 (2012) 385–407

    402                                                                Ramón Giraldo, Jorge Mateu & Pedro Delicado




                                                                                  1.0
          Site 31   Site 32   Site 33        Site 34    Site 35         Site 36




     2




                                                                                  0.8
     1    Site 25   Site 26   Site 27        Site 28    Site 29         Site 30




                                                                                  0.6
          Site 19   Site 20   Site 21        Site 22    Site 23         Site 24
     0
y

     −1




                                                                                  0.4
          Site 13   Site 14   Site 15        Site 16    Site 17         Site 18
     −2




                                                                                  0.2
          Site 7    Site 8    Site 9         Site 10    Site 11         Site 12
     −3




                                                                                  0.0
          Site 1    Site 2    Site 3         Site 4     Site 5          Site 6



           −3        −2        −1              0          1               2             0     100             200   300

                                         x                                                                 Time

    Figure 9: Left panel: Grid of simulated locations. Right panel: B-splines basis used in
              the simulation algorithm.



    3.3. Using Simulated Data
       In this section we discuss algorithms proposed in our package and evaluate the
    performance of the methodologies proposed in Section 2 by means of a simulation
    study.
        We fixed the thirty six sites shown in Figure 9, and simulated a discretized set
    of spatially correlated functional data according to the model
                                                       15
                                                       X
                                        Xsi (t) =                 ail Bl (t) + i (t), i = 1, . . . , 36                  (9)
                                                       l=1

    with B(t) = (B1 (t), . . . , B15 (t)) a B-splines basis (see right panel Figure 9), ail ,
    a realization of a Gaussian random field al ∼ N36 (10, Σ), where Σ is a 36 × 36
    covariance matrix defined according to the exponential model C(h) = 2 exp( −h         8 )
    with h = ksi − sj k, i, j = 1, . . . , 36, and (t) ∼ N36 (0.09, 1) is a random error for
    each fixed t, with t = 1, . . . , 365. The number of basis functions and the parameters
    for simulating coefficients and errors were chosen empirically.
          The R code for obtaining the simulated curves is the following

    R> coordinates<-expand.grid(x= c(-3,-2, -1, 0, 1, 2),
    + y=c(-3,-2,-1,0, 1, 2))
    R> mean.coef=rep(10,36)
    R> covariance.coef <- cov.spatial(distance, cov.model=model,
    + cov.pars=c(2,8))
    R> normal.coef=mvrnorm(15,mean.coef,covariance.coef)
    R> mean.error<-rep(0, 36)
    R> covariance.error <-cov.spatial(distance, cov.model=model,
    + cov.pars=c(0.09,0))
    R> normal.error<-mvrnorm(365,mean.error,covariance.error)
    R> argvals=seq(1, 365, len = 365)


                                                                     Revista Colombiana de Estadística 35 (2012) 385–407

geofd: An R Package for Function-Valued Geostatistical Prediction                   403

R> nbasis=15
R> lambda=0
R> rangeval <- range(argvals)
R> norder   <- 4
R> bspl.basis <- create.bspline.basis(rangeval, nbasis,
+ norder)
R> data.basis=eval.basis(argvals, bspl.basis, Lfdobj=0)
R> func.data=t(normal.coef)%*%t(data.basis)
R> simulated.data= func.data+ normal.error

A plot with the simulated data and smoothed curves (by using a B-splines basis)
is obtained with the following code

R> datafdPar <- fdPar(bspl.basis, Lfdobj=2, lambda)
R> smooth.datafd <- smooth.basis(argvals, simulated.data,
+ datafdPar)
R> simulated.smoothed=eval.fd(argvals, smooth.datafd$fd,
+ fdobj=0)
R> matplot(simulated.data, type="l", lty=1, xlab="Time",
+ ylab="Simulated data")
R> matplot(simulated.smoothed, lty=1, xlab="Time",
+ ylab="Smoothed data", type="l")

The simulated data are shown in the left panel of Figure 10. These data were
smoothed by using a B-splines basis with 15 functions (right panel Figure 10).
Once obtaining the smoothed curves we carry out a cross-validation prediction
procedure. Each data location in Figure 9 is removed from the dataset and a
smoothed curve is predicted at this location using OKFD based on the remaining
smoothed functions.




Figure 10: Left panel: Simulated data. Right panel: Smoothed curves (by using a
           B-splines basis).


   The R code for obtaining the cross-validation predictions is

R> predictions= matrix(0, nrow=365, ncol=36)

                                     Revista Colombiana de Estadística 35 (2012) 385–407

404                                   Ramón Giraldo, Jorge Mateu & Pedro Delicado


R> for (i in 1:36)
R>     {
R>       coord.cero=matrix(coordinates[i,], nrow=1,ncol=2)
R>       okfd.res<-okfd(new.coords=coord.cero,
+        coords=coordinates[-i,], cov.model="exponential",
+        data=simulated.data[,-i], smooth.type="bsplines",
+        nbasis=15, argvals=argvals, fix.nugget=TRUE)
R>       predictions[,i]=okfd.res$krig.new.data
R>       }

We can plot the cross-validation predictions and the cross-validation residuals by
using the following code

R> matplot(predictions, lty=1, xlab="Time",ylab="Predictions",
+ main="Cross-validation predictions", type="l")
R> cross.residuals=simulated.smoothed-predictions
R> matplot(cross.residuals, lty=1, xlab="Time",
+ ylab="Residuals", main="Cross-validation residuals",
+ type="l")

The cross-validation predictions (left panel Figure 11) shows that the predictions
have the same temporal behavior as the smoothed curves (right panel Figure 10).
Note also that the prediction curves have less variance. This is not surprising,
because kriging is itself a smoothing method.
   Figure 11 (right panel) shows cross-validation residuals. The predictions are
plausible in all sites because all the residual curves are varying around zero.




Figure 11: Left panel: Simulated data. Right panel: Smoothed curves (by using a
           B-splines basis).


    The cross-validation results based on simulated data show a good performance
of the proposed predictor, and indicate from a descriptive point of view that it can
be adopted as a valid method for modeling spatially correlated functional data.

                                    Revista Colombiana de Estadística 35 (2012) 385–407

geofd: An R Package for Function-Valued Geostatistical Prediction                   405

4. Conclusion
     This paper introduces the R package geofd through an example. This package
contains functions for modeling the trace-variogram function and for carrying out
spatial prediction using the method of ordinary kriging for functional data. The
advancements in this package would not be possible without several other impor-
tant contributions to CRAN; these are reflected as geofd’s package dependencies.
The fda package by (Ramsay et al. 2010) provides methods for smoothing data by
using basis functions. The geoR package (Ribeiro & Diggle 2001) provides func-
tions to enable modeling the trace-variograma function. There remains scope for
further extensions to geofd. We can consider other approaches for smoothing the
data. For example, the use of wavelets could be useful for smoothing data with
rapid changes in behavior. We plan to continue adding methods to the package.
Continuous time varying kriging (Giraldo et al. 2010) and methods based on multi-
variable geostatistics (Giraldo 2009, Nerini et al. 2010) can be implemented in the
package. However the use of these approaches could be restrictive when the num-
ber of basis functions used for smoothing the data set is large. Computationally
efficient strategies are needed in this sense.


Acknowledgements
    We would like to thank Andrés Pérez for his valuable contribution to upload the
package geofd to CRAN. This work was partially supported by the Spanish Min-
istry of Education and Science through grants MTM2010-14961 and MTM2009-
13985-C02-01.
                                                                 
              Recibido: octubre de 2011 — Aceptado: agosto de 2012


References
Baladandayuthapani, V., Mallick, B., Hong, M., Lupton, J., Turner, N. & Caroll, R. (2008), ‘Bayesian hierarchical spatially correlated functional data analysis with application to colon carcinoginesis’, Biometrics 64, 64–73.
Box, G. & Jenkins, G. (1976), Time Series Analysis., Holden Day, New York.
Cressie, N. (1993), Statistics for Spatial Data, John Wiley & Sons, New York.
Cuevas, A., Febrero, M. & Fraiman, R. (2004), ‘An ANOVA test for functional data.’, Computational Statistics and Data Analysis 47, 111–122.
Delicado, P., Giraldo, R., Comas, C. & Mateu, J. (2010), ‘Statistics for spatial functional data: Some recent contributions’, Environmetrics 21, 224–239.
Ferraty, F. & Vieu, P. (2006), Nonparametric Functional Data Analysis. Theory and Practice, Springer, New York.
Giraldo, R. (2009), Geostatistical Analysis of Functional Data, PhD thesis, Universitat Politècnica de Catalunya.
Giraldo, R., Delicado, P. & Mateu, J. (2010), ‘Continuous time-varying kriging for spatial prediction of functional data: An environmental application’, Journal of Agricultural, Biological, and Environmental Statistics 15(1), 66–82.
Giraldo, R., Delicado, P. & Mateu, J. (2011), ‘Ordinary kriging for function-valued spatial data’, Environmental and Ecological Statistics 18(3), 411–426.
Goulard, M. & Voltz, M. (1993), Geostatistical interpolation of curves: A case study in soil science, in A. Soares, ed., ‘Geostatistics Tróia 92’, Vol. 2, Kluwer Academc Press, pp. 805–816.
Grosjean, P. (2010), SciViews-R: A GUI API for R, UMONS, Mons, Belgium. *http://www.sciviews.org/SciViews-R
Malfait, N. & Ramsay, J. (2003), ‘The historical functional linear model’, The Canadian Journal of Statistics 31(2), 115–128.
MATLAB (2010), version 7.10.0 (R2010a), The MathWorks Inc., Natick, Massachusetts.
Myers, D. (1982), ‘Matrix formulation of co-kriging’, Mathematical Geology 14(3), 249–257.
Nerini, D., Monestiez, P. & Manté, C. (2010), ‘Cokriging for spatial functional data’, Journal of Multivariate Analysis 101(2), 409–418.
R Development Core Team (2011), R: A Language and Environment for Statistical Computing, R Foundation for Statistical Computing, Vienna, Austria. ISBN 3-900051-07-0. *http://www.R-project.org.
Ramsay, J., Hooker, G. & Graves, S. (2009), Functional Data Analysis with R and MATLAB, Springer, New York.
Ramsay, J. & Silverman, B. (2005), Functional Data Analysis. Second edition, Springer, New York.
Ramsay, J., Wickham, H., Graves, S. & Hooker, G. (2010), fda: Functional Data Analysis. R package version 2.2.6. *http://cran.r-project.org/web/packages/fda
Ribeiro, P. & Diggle, P. (2001), ‘geoR: A package for geostatistical analysis’, RNEWS 1(2), 15–18. *http://cran.R-project.org/doc/Rnews
Staicu, A., Crainiceanu, C. & Carroll, R. (2010), ‘Fast methods for spatially correlated multilevel functional data’, Biostatistics 11(2), 177–194. geofd: An R Package for Function-Valued Geostatistical Prediction                   407
Ver Hoef, J. & Cressie, N. (1993), ‘Multivariable spatial prediction’, Geology 25(2), 219–240.
Wackernagel, H. (1995), Multivariate Geostatistics: An Introduction with Applications, Springer-Verlag, Berlin.
Yamanishi, Y. & Tanaka, Y. (2003), ‘Geographically weighted functional multiple regression analysis: A numerical investigation’, Journal of Japanese Society of Computational Statistics 15, 307–317.
